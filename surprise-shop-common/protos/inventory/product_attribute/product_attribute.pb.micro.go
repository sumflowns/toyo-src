// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: product_attribute.proto

package product_attribute

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for ProductAttributeHandler service

type ProductAttributeHandlerService interface {
	//获取信息
	GetProductAttributeById(ctx context.Context, in *In_GetProductAttributeById, opts ...client.CallOption) (*Out_GetProductAttributeById, error)
	//修改信息
	UpdateProductAttributeInfo(ctx context.Context, in *In_UpdateProductAttributeInfo, opts ...client.CallOption) (*Out_UpdateProductAttributeInfo, error)
	//获取列表
	GetProductAttributes(ctx context.Context, in *In_GetProductAttributes, opts ...client.CallOption) (*Out_GetProductAttributes, error)
	//删除列表
	DeleteProductAttributes(ctx context.Context, in *In_DeleteProductAttributes, opts ...client.CallOption) (*Out_DeleteProductAttributes, error)
	//新建信息
	CreateProductAttribute(ctx context.Context, in *In_CreateProductAttribute, opts ...client.CallOption) (*Out_CreateProductAttribute, error)
	//获取列表
	GetProductAttributeList(ctx context.Context, in *In_GetProductAttributeList, opts ...client.CallOption) (*Out_GetProductAttributeList, error)
}

type productAttributeHandlerService struct {
	c    client.Client
	name string
}

func NewProductAttributeHandlerService(name string, c client.Client) ProductAttributeHandlerService {
	if c == nil {
		c = client.NewClient()
	}
	if len(name) == 0 {
		name = "product_attribute"
	}
	return &productAttributeHandlerService{
		c:    c,
		name: name,
	}
}

func (c *productAttributeHandlerService) GetProductAttributeById(ctx context.Context, in *In_GetProductAttributeById, opts ...client.CallOption) (*Out_GetProductAttributeById, error) {
	req := c.c.NewRequest(c.name, "ProductAttributeHandler.GetProductAttributeById", in)
	out := new(Out_GetProductAttributeById)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productAttributeHandlerService) UpdateProductAttributeInfo(ctx context.Context, in *In_UpdateProductAttributeInfo, opts ...client.CallOption) (*Out_UpdateProductAttributeInfo, error) {
	req := c.c.NewRequest(c.name, "ProductAttributeHandler.UpdateProductAttributeInfo", in)
	out := new(Out_UpdateProductAttributeInfo)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productAttributeHandlerService) GetProductAttributes(ctx context.Context, in *In_GetProductAttributes, opts ...client.CallOption) (*Out_GetProductAttributes, error) {
	req := c.c.NewRequest(c.name, "ProductAttributeHandler.GetProductAttributes", in)
	out := new(Out_GetProductAttributes)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productAttributeHandlerService) DeleteProductAttributes(ctx context.Context, in *In_DeleteProductAttributes, opts ...client.CallOption) (*Out_DeleteProductAttributes, error) {
	req := c.c.NewRequest(c.name, "ProductAttributeHandler.DeleteProductAttributes", in)
	out := new(Out_DeleteProductAttributes)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productAttributeHandlerService) CreateProductAttribute(ctx context.Context, in *In_CreateProductAttribute, opts ...client.CallOption) (*Out_CreateProductAttribute, error) {
	req := c.c.NewRequest(c.name, "ProductAttributeHandler.CreateProductAttribute", in)
	out := new(Out_CreateProductAttribute)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productAttributeHandlerService) GetProductAttributeList(ctx context.Context, in *In_GetProductAttributeList, opts ...client.CallOption) (*Out_GetProductAttributeList, error) {
	req := c.c.NewRequest(c.name, "ProductAttributeHandler.GetProductAttributeList", in)
	out := new(Out_GetProductAttributeList)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ProductAttributeHandler service

type ProductAttributeHandlerHandler interface {
	//获取信息
	GetProductAttributeById(context.Context, *In_GetProductAttributeById, *Out_GetProductAttributeById) error
	//修改信息
	UpdateProductAttributeInfo(context.Context, *In_UpdateProductAttributeInfo, *Out_UpdateProductAttributeInfo) error
	//获取列表
	GetProductAttributes(context.Context, *In_GetProductAttributes, *Out_GetProductAttributes) error
	//删除列表
	DeleteProductAttributes(context.Context, *In_DeleteProductAttributes, *Out_DeleteProductAttributes) error
	//新建信息
	CreateProductAttribute(context.Context, *In_CreateProductAttribute, *Out_CreateProductAttribute) error
	//获取列表
	GetProductAttributeList(context.Context, *In_GetProductAttributeList, *Out_GetProductAttributeList) error
}

func RegisterProductAttributeHandlerHandler(s server.Server, hdlr ProductAttributeHandlerHandler, opts ...server.HandlerOption) error {
	type productAttributeHandler interface {
		GetProductAttributeById(ctx context.Context, in *In_GetProductAttributeById, out *Out_GetProductAttributeById) error
		UpdateProductAttributeInfo(ctx context.Context, in *In_UpdateProductAttributeInfo, out *Out_UpdateProductAttributeInfo) error
		GetProductAttributes(ctx context.Context, in *In_GetProductAttributes, out *Out_GetProductAttributes) error
		DeleteProductAttributes(ctx context.Context, in *In_DeleteProductAttributes, out *Out_DeleteProductAttributes) error
		CreateProductAttribute(ctx context.Context, in *In_CreateProductAttribute, out *Out_CreateProductAttribute) error
		GetProductAttributeList(ctx context.Context, in *In_GetProductAttributeList, out *Out_GetProductAttributeList) error
	}
	type ProductAttributeHandler struct {
		productAttributeHandler
	}
	h := &productAttributeHandlerHandler{hdlr}
	return s.Handle(s.NewHandler(&ProductAttributeHandler{h}, opts...))
}

type productAttributeHandlerHandler struct {
	ProductAttributeHandlerHandler
}

func (h *productAttributeHandlerHandler) GetProductAttributeById(ctx context.Context, in *In_GetProductAttributeById, out *Out_GetProductAttributeById) error {
	return h.ProductAttributeHandlerHandler.GetProductAttributeById(ctx, in, out)
}

func (h *productAttributeHandlerHandler) UpdateProductAttributeInfo(ctx context.Context, in *In_UpdateProductAttributeInfo, out *Out_UpdateProductAttributeInfo) error {
	return h.ProductAttributeHandlerHandler.UpdateProductAttributeInfo(ctx, in, out)
}

func (h *productAttributeHandlerHandler) GetProductAttributes(ctx context.Context, in *In_GetProductAttributes, out *Out_GetProductAttributes) error {
	return h.ProductAttributeHandlerHandler.GetProductAttributes(ctx, in, out)
}

func (h *productAttributeHandlerHandler) DeleteProductAttributes(ctx context.Context, in *In_DeleteProductAttributes, out *Out_DeleteProductAttributes) error {
	return h.ProductAttributeHandlerHandler.DeleteProductAttributes(ctx, in, out)
}

func (h *productAttributeHandlerHandler) CreateProductAttribute(ctx context.Context, in *In_CreateProductAttribute, out *Out_CreateProductAttribute) error {
	return h.ProductAttributeHandlerHandler.CreateProductAttribute(ctx, in, out)
}

func (h *productAttributeHandlerHandler) GetProductAttributeList(ctx context.Context, in *In_GetProductAttributeList, out *Out_GetProductAttributeList) error {
	return h.ProductAttributeHandlerHandler.GetProductAttributeList(ctx, in, out)
}
